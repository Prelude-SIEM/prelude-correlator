#####
#
# Copyright (C) 2006 G Ramon Gomez <gene at gomezbrothers dot com>
# All Rights Reserved.
#
# This file is part of the Prelude-Correlator program.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
#
#####

# Detect brute force attempt by address
# This rule looks for all classifications that match login or authentication
# attempts, and detects when they exceed a certain threshold. 

pattern = classification.text: [Ll]ogin|[Aa]uthentication; \
	  assessment.impact.completion: failed; \
	  source(*).node.address(*).address: (.*); \
	  target(*).node.address(*).address: (.*); \
	  messageid: (.+); \
	  analyzer(*).analyzerid: (.*)

new_context = BRUTE_SOURCE_TARGET_$1[*]_$2[*]; expire: 600; threshold: 4;
optional_context = BRUTE_SOURCE_TARGET_$1[*]_$2[*];

pre_action = correlation_alert.alertident(>>).alertident=$3; \
             correlation_alert.alertident(-1).analyzerid=$4[-1]; \
	     source(>>) = source; target(>>) = target;

action = source(>>) = source; target(>>) = target; \
	 correlation_alert.alertident(>>).alertident=$3; \
         correlation_alert.alertident(-1).analyzerid=$4[-1]; \
 	 classification.text=Brute force attack; \
	 assessment.impact.severity=high; \
	 assessment.impact.description=Multiple failed attempts have been made to login to a user account; \
	 correlation_alert.name = Multiple failed login; \
	 additional_data(>>).data = ignore_atomic_event

destroy_context = BRUTE_SOURCE_TARGET_$1[*]_$2[*]



# Detect brute force attempt by user
# This rule looks for all classifications that match login or authentication
# attempts, and detects when they exceed a certain threshold.

pattern = classification.text: [Ll]ogin|[Aa]uthentication; \
	  assessment.impact.completion: failed; \
          target(*).user.user_id(*).name: (.*); \
          messageid: (.+); \
          analyzer(*).analyzerid: (.*)

pre_action = source(>>) = source; target(>>) = target; \
	     correlation_alert.alertident(>>).alertident=$2; \
             correlation_alert.alertident(-1).analyzerid=$3[-1]

new_context = BRUTE_USER_$1[*]; expire: 600; threshold: 20
optional_context = BRUTE_USER_$1[*];

action = source(>>) = source; target(>>) = target; \
	 classification.text=Brute force attack; \
         assessment.impact.severity=high; \
         assessment.impact.description=Multiple failed attempts have been made to login to a user account; \
         correlation_alert.name = Multiple failed login; \
	 additional_data(>>).data = ignore_atomic_event
